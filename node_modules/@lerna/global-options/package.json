{
  "_args": [
    [
      "@lerna/global-options@3.13.0",
      "/home/kalgudi/Documents/github/script_automate/automate/node_modules/@lerna/cli"
    ]
  ],
  "_from": "@lerna/global-options@3.13.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/global-options@3.13.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@lerna/global-options",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/global-options_3.13.0_1550195382993_0.8350622565697219"
  },
  "_npmUser": {
    "email": "daniel.stockman@gmail.com",
    "name": "evocateur"
  },
  "_npmVersion": "lerna/3.13.0/node@v10.15.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "name": "@lerna/global-options",
    "raw": "@lerna/global-options@3.13.0",
    "rawSpec": "3.13.0",
    "scope": "@lerna",
    "spec": "3.13.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@lerna/cli"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/global-options/-/global-options-3.13.0.tgz",
  "_shasum": "217662290db06ad9cf2c49d8e3100ee28eaebae1",
  "_shrinkwrap": null,
  "_spec": "@lerna/global-options@3.13.0",
  "_where": "/home/kalgudi/Documents/github/script_automate/automate/node_modules/@lerna/cli",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {},
  "description": "Global options applicable to _every_ lerna sub-command",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 5,
    "integrity": "sha512-SlZvh1gVRRzYLVluz9fryY1nJpZ0FHDGB66U9tFfvnnxmueckRQxLopn3tXj3NU1kc3QANT2I5BsQkOqZ4TEFQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZhq3CRA9TVsSAnZWagAAnk8P+gNS+ltZW+ZW2Kmpk0zJ\nmmFDmUS7Vlo51+d3erzU6Oj2A9nNvH0uKeVZvnVBT/eRLSxxeKYCV2Yoq1oa\n9pHY9oMakEiBxgNj9DJzUSLXydgMdZWQokEDtwKZ0+Twkgc9giGX3Ls0XhyA\nvQqdKaahs7MudM0Q55RpsD69/WDvyZ93i+ypG2HiVM+ZFcU53iFtAcCr3MuG\nrBXaxlKj29IMPgQnirA0uyIwXx+igg+4CD2+0kBQBbPhQrjO85QbL0ct4Jr1\nGq7Jq/7UO1S0SDSULLtHzCNfoUhXX7U4DNp3u1LFc9sf9GZiTHa7nvgVvTo1\ny0xJd2fNI2/wAqCzHcXmAYIOsO2sGBGa/8MJN68xiS+jnQKZ92CJbhpqzY1V\nBCRZtOuMGgtlmsk47fJMoPgiqLaspc+2MWVqNuJqUW1r6uY9pI6gnsBxt3iB\n5RhxHkxOwQTcFWOBk1kpjJvGFONacJkpttR99FbSS2mkOI6vWz6OhApy98fH\nf8xxoktJuyFc7zdJaC2e0kyFMc5Zu2s6a8rOdhfTZMWLPlNnqXDSpdAH3fmk\nws3822+iyX+LYJ2ckiw3dOQx1gPiytR8OveMQHfoLzFu0lFzk9kwuYaMfDZ3\nK7oYdWJvlPI+KjrED6bUKkFXxgiBLO7TqQNj0NgrPNiHYQjEsskJi/FPmKOp\niYWz\r\n=PBZa\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "217662290db06ad9cf2c49d8e3100ee28eaebae1",
    "tarball": "https://registry.npmjs.org/@lerna/global-options/-/global-options-3.13.0.tgz",
    "unpackedSize": 8289
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "gitHead": "9a47201f3fdd1df09cfb1922f26329d1dc4c8cc5",
  "homepage": "https://github.com/lerna/lerna/tree/master/core/global-options#readme",
  "keywords": [
    "core",
    "lerna"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "evocateur",
      "email": "daniel.stockman@gmail.com"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    }
  ],
  "name": "@lerna/global-options",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/global-options`\n\n> Global options applicable to _every_ lerna sub-command\n\n## Options\n\n### `--concurrency`\n\nHow many threads to use when Lerna parallelizes the tasks (defaults to count of logical CPU cores)\n\n```sh\n$ lerna publish --concurrency 1\n```\n\n### `--loglevel <silent|error|warn|success|info|verbose|silly>`\n\nWhat level of logs to report. On failure, all logs are written to lerna-debug.log in the current working directory.\n\nAny logs of a higher level than the setting are shown. The default is \"info\".\n\n### `--max-buffer <bytes>`\n\nSet a max buffer length for each underlying process call. Useful for example\nwhen someone wants to import a repo with a larger amount of commits while\nrunning `lerna import`. In that case the built-in buffer length might not\nbe sufficient.\n\n### `--no-progress`\n\nDisable progress bars. This is always the case in a CI environment.\n\n### `--no-sort`\n\nBy default, all tasks execute on packages in topologically sorted order as to respect the dependency relationships of the packages in question. Cycles are broken on a best-effort basis in a way not guaranteed to be consistent across Lerna invocations.\n\nTopological sorting can cause concurrency bottlenecks if there are a small number of packages with many dependents or if some packages take a disproportionately long time to execute. The `--no-sort` option disables sorting, instead executing tasks in an arbitrary order with maximum concurrency.\n\nThis option can also help if you run multiple \"watch\" commands. Since `lerna run` will execute commands in topologically sorted order, it can end up waiting for a command before moving on. This will block execution when you run \"watch\" commands, since they typically never end. An example of a \"watch\" command is [running `babel` with the `--watch` CLI flag](https://babeljs.io/docs/usage/cli/#babel-compile-files).\n\n### `--reject-cycles`\n\nFail immediately if a cycle is found (in `bootstrap`, `exec`, `publish` or `run`).\n\n```sh\n$ lerna bootstrap --reject-cycles\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "directory": "core/global-options",
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "3.13.0"
}
