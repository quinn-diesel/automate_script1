{
  "_args": [
    [
      "conventional-recommended-bump@^5.0.0",
      "/home/kalgudi/Documents/github/script_automate/automate/node_modules/@lerna/conventional-commits"
    ]
  ],
  "_from": "conventional-recommended-bump@>=5.0.0 <6.0.0",
  "_hasShrinkwrap": false,
  "_id": "conventional-recommended-bump@5.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/conventional-recommended-bump",
  "_nodeVersion": "11.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/conventional-recommended-bump_5.0.1_1558212563671_0.6302258081927217"
  },
  "_npmUser": {
    "email": "bencoe@gmail.com",
    "name": "bcoe"
  },
  "_npmVersion": "lerna/3.13.4/node@v11.12.0+x64 (darwin)",
  "_phantomChildren": {
    "buffer-from": "1.1.1",
    "inherits": "2.0.4",
    "string_decoder": "1.1.1",
    "typedarray": "0.0.6",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "name": "conventional-recommended-bump",
    "raw": "conventional-recommended-bump@^5.0.0",
    "rawSpec": "^5.0.0",
    "scope": null,
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@lerna/conventional-commits"
  ],
  "_resolved": "https://registry.npmjs.org/conventional-recommended-bump/-/conventional-recommended-bump-5.0.1.tgz",
  "_shasum": "5af63903947b6e089e77767601cb592cabb106ba",
  "_shrinkwrap": null,
  "_spec": "conventional-recommended-bump@^5.0.0",
  "_where": "/home/kalgudi/Documents/github/script_automate/automate/node_modules/@lerna/conventional-commits",
  "author": {
    "email": "maochenyan@gmail.com",
    "name": "Steve Mao",
    "url": "https://github.com/stevemao"
  },
  "bin": {
    "conventional-recommended-bump": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/conventional-changelog/conventional-changelog/issues"
  },
  "dependencies": {
    "concat-stream": "^2.0.0",
    "conventional-changelog-preset-loader": "^2.1.1",
    "conventional-commits-filter": "^2.0.2",
    "conventional-commits-parser": "^3.0.3",
    "git-raw-commits": "2.0.0",
    "git-semver-tags": "^2.0.3",
    "meow": "^4.0.0",
    "q": "^1.5.1"
  },
  "description": "Get a recommended version bump based on conventional commits",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 7,
    "integrity": "sha512-RVdt0elRcCxL90IrNP0fYCpq1uGt2MALko0eyeQ+zQuDVWtMGAy9ng6yYn3kax42lCj9+XBxQ8ZN6S9bdKxDhQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4G/UCRA9TVsSAnZWagAAgCUP/35mEOLdKRj4hFJlURW5\nejRPIwgQ0UXu14X2zyRODP7TTKhV3Kd4CxX2N8tmZ9jOR/VzxqoLk0n1k1eN\nK/iybvcnp+wzts8r9YK9Etlft2+I7zILlO2I25q66/5D2L2Z3OfiPGMRn4zv\nH6K8cgXeSDrfmjJSMiHORkQOHJ3IhfVr4BFExpskt5UXTI9FkBrrxA0gCyWd\nmGW9rAzGE2XjuMz1ck3YX2nenxSDfXZSzLBrPerV+sp9Fkqf1EfZy5tL+AMa\nVC4kLFDZRmAkam8ffgE9cdgrVcZ2yEqOo3lgdbG9FpbPM4Dod20zzJkhMZ8i\nNboBcwDuMXaTn7je+xso2T9hGhMU/hmeGLcFsmRjV2wLlx9VAPlCdIyOfjhs\nbIgmX+Lz5R0MEx+gV45gC/5wL3k+NF8cM6HU51wdwm25dGi4Gk9VuYgBWkUA\nJ4Z9AGeV3sk17AbSiJ7Z3bF5Km2x3snp2VkX73ympPZ7GvuZOxOAGK2JhQM6\nG4Om1XOzMW/2XA/zGpHAGoodBhWqab72VZhRom4EZRYQ6CeoEY7Zwo9YEYga\n+q83UoTCplAsQJ7z5xPKB5Nu/Sw1vwnEoFWJ8Ogf9lRn33SEHl2LioUvCylz\nGGOR7/mmaKz6QcOhWCwMQ6Sx+YRJhhRXGekaGBn5byFVh9g8/vwLpFCpMzIV\n2T1d\r\n=1Uou\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "5af63903947b6e089e77767601cb592cabb106ba",
    "tarball": "https://registry.npmjs.org/conventional-recommended-bump/-/conventional-recommended-bump-5.0.1.tgz",
    "unpackedSize": 29255
  },
  "engines": {
    "node": ">=6.9.0"
  },
  "gitHead": "38f5508191f8afc1a8503d1fd24e2de6d05b8738",
  "homepage": "https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-recommended-bump#readme",
  "keywords": [
    "bump",
    "conventional",
    "conventional-recommended-bump",
    "recommend"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "bcoe",
      "email": "bencoe@gmail.com"
    },
    {
      "name": "dlmr",
      "email": "gustaf.dalemar@gmail.com"
    },
    {
      "name": "hutson",
      "email": "hutson@hyper-expanse.net"
    },
    {
      "name": "marionebl",
      "email": "hello@mario-nebl.de"
    },
    {
      "name": "stevemao",
      "email": "maochenyan@gmail.com"
    },
    {
      "name": "tapppi",
      "email": "moilanen.tapani@gmail.com"
    }
  ],
  "name": "conventional-recommended-bump",
  "optionalDependencies": {},
  "readme": "# conventional-recommended-bump\n\n> Get a recommended version bump based on conventional commits.\n\nGot the idea from https://github.com/conventional-changelog/conventional-changelog/pull/29\n\n## Table of Contents\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n    - [options](#options)\n      - [ignoreReverted](#ignorereverted)\n      - [preset](#preset)\n      - [config](#config)\n      - [whatBump](#whatbump)\n      - [tagPrefix](#tagprefix)\n      - [lernaPackage](#lernapackage)\n    - [parserOpts](#parseropts)\n    - [callback](#callback)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Install\n\n```bash\nnpm install conventional-recommended-bump\n```\n\n## Usage\n\n```javascript\nconst conventionalRecommendedBump = require(`conventional-recommended-bump`);\n\nconventionalRecommendedBump({\n  preset: `angular`\n}, (error, recommendation) => {\n  console.log(recommendation.releaseType); // 'major'\n});\n```\n\n```bash\nnpm install --global conventional-recommended-bump\nconventional-recommended-bump --help\n```\n\n## API\n\n```javascript\nconventionalRecommendedBump(options, [parserOpts,] callback);\n```\n\n`parserOpts` is optional.\n\nIn the case you don't want to provide `parserOpts`, then `callback` must be provided as the second argument.\n\n#### options\n\n`options` is an object with the following properties:\n\n* ignoreReverted\n* preset\n* config\n* whatBump\n\n##### ignoreReverted\n\n**Type:** `boolean` **Default:** `true`\n\nIf `true`, reverted commits will be ignored.\n\n##### preset\n\n**Type:** `string`\n\nIt's recommended to use a preset so you don't have to define everything yourself.\n\nThe value is passed to [`conventional-changelog-preset-loader`](https://www.npmjs.com/package/conventional-changelog-preset-loader).\n\n##### config\n\n**Type:** `object`\n\nThis should serve as default values for other arguments of `conventional-recommended-bump` so you don't need to rewrite the same or similar config across your projects.\n\n**NOTE:** `config` option will be overwritten by the value loaded by `conventional-changelog-preset-loader` if the `preset` options is set.\n\n##### whatBump\n\n**Type:** `function`\n\nA function that takes parsed commits as an argument.\n\n```javascript\nwhatBump(commits) {};\n```\n\n`commits` is an array of all commits from last semver tag to `HEAD` as parsed by [conventional-commits-parser](https://github.com/conventional-changelog/conventional-commits-parser)\n\nThis should return an object including but not limited to `level` and `reason`. `level` is a `number` indicating what bump it should be and `reason` is the reason of such release.\n\n##### tagPrefix\n\n**Type:** `string`\n\nSpecify a prefix for the git tag that will be taken into account during the comparison.\n\nFor instance if your version tag is prefixed by `version/` instead of `v` you would specifying `--tagPrefix=version/` using the CLI, or `version/` as the value of the `tagPrefix` option.\n\n##### lernaPackage\n\n**Type:** `string`\n\nSpecify the name of a package in a [Lerna](https://lernajs.io/)-managed repository. The package name will be used when fetching all changes to a package since the last time that package was released.\n\nFor instance if your project contained a package named `conventional-changelog`, you could have only commits that have happened since the last release of `conventional-changelog` was tagged by specifying `--lernaPackage=conventional-changelog` using the CLI, or `conventional-changelog` as the value of the `lernaPackage` option.\n\n#### parserOpts\n\n**Type:** `object`\n\nSee the [conventional-commits-parser](https://github.com/conventional-changelog/conventional-commits-parser) documentation for available options.\n\n#### callback\n\n**Type:** `function`\n\n```javascript\ncallback(error, recommendation) {};\n```\n\n`recommendation` is an `object` with a single property, `releaseType`.\n\n`releaseType` is a `string`: Possible values: `major`, `minor` and `patch`, or `undefined` if `whatBump` does not return sa valid `level` property, or the `level` property is not set by `whatBump`.\n\n## Debugging\n\nTo assist users of `conventional-recommended-bump` with debugging the behavior of this module we use the [debug](https://www.npmjs.com/package/debug) utility package to print information about the release process to the console. To enable debug message printing, the environment variable `DEBUG`, which is the variable used by the `debug` package, must be set to a value configured by the package containing the debug messages to be printed.\n\nTo print debug messages on a unix system set the environment variable `DEBUG` with the name of this package prior to executing `conventional-recommended-bump`:\n\n```bash\nDEBUG=conventional-recommended-bump conventional-recommended-bump\n```\n\nOn the Windows command line you may do:\n\n```bash\nset DEBUG=conventional-recommended-bump\nconventional-recommended-bump\n```\n\n## Node Support Policy\n\nWe only support [Long-Term Support](https://github.com/nodejs/Release) versions of Node.\n\nWe specifically limit our support to LTS versions of Node, not because this package won't work on other versions, but because we have a limited amount of time, and supporting LTS offers the greatest return on that investment.\n\nIt's possible this package will work correctly on newer versions of Node. It may even be possible to use this package on older versions of Node, though that's more unlikely as we'll make every effort to take advantage of features available in the oldest LTS version we support.\n\nAs each Node LTS version reaches its end-of-life we will remove that version from the `node` `engines` property of our package's `package.json` file. Removing a Node version is considered a breaking change and will entail the publishing of a new major version of this package. We will not accept any requests to support an end-of-life version of Node. Any merge requests or issues supporting an end-of-life version of Node will be closed.\n\nWe will accept code that allows this package to run on newer, non-LTS, versions of Node. Furthermore, we will attempt to ensure our own changes work on the latest version of Node. To help in that commitment, our continuous integration setup runs against all LTS versions of Node in addition the most recent Node release; called _current_.\n\nJavaScript package managers should allow you to install this package with any version of Node, with, at most, a warning if your version of Node does not fall within the range specified by our `node` `engines` property. If you encounter issues installing this package, please report the issue to your package manager.\n\n## Contributing\n\nPlease read our [contributing guide](https://github.com/conventional-changelog/conventional-changelog/blob/master/CONTRIBUTING.md) to see how you may contribute to this project.\n\n## License\n\nMIT © [Steve Mao](https://github.com/stevemao)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/conventional-changelog/conventional-changelog.git"
  },
  "scripts": {
    "test-windows": "mocha --timeout 30000 ./test/preset-resolver.spec.js"
  },
  "version": "5.0.1"
}
