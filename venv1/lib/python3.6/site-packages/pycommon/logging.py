import os
from functools import wraps

import aws_lambda_logging


def _extract_amz_trace_id():
    data = os.getenv('_X_AMZN_TRACE_ID')
    result = {}
    if data:
        for d in data.split(';'):
            key, value = d.split('=')
            result['trace_id_{}'.format(key.lower())] = value
    return result


def setup(level='DEBUG', boto_level=None, **kwargs):
    kwargs.update(_extract_amz_trace_id())
    aws_lambda_logging.setup(
        level=level,
        boto_level=boto_level,
        function_name=os.getenv('AWS_LAMBDA_FUNCTION_NAME'),
        **kwargs)


def with_logging(logger, level='INFO'):
    def decorator(func):
        @wraps(func)
        def f(event, context):
            setup(level)
            try:
                return func(event, context)
            except Exception as e:
                logger.error('Unexpected error happened: %s', e, exc_info=True)
                raise e
        return f
    return decorator
