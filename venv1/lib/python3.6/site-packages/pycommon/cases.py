import re


def camel_to_snake(name):
    s1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', name)
    return re.sub('([a-z0-9])([A-Z])', r'\1_\2', s1).lower()


def snake_to_camel(snake_str):
    components = snake_str.split('_')
    return components[0] + ''.join(x.title() for x in components[1:])


def _convert_keys(iterable, conv_fn):
    if type(iterable) is dict:
        for key in list(iterable.keys()):
            new_key = conv_fn(key)
            iterable[new_key] = iterable.pop(key)
            if type(iterable[new_key]) is dict or type(iterable[new_key]) is list:
                iterable[new_key] = _convert_keys(iterable[new_key], conv_fn)
    elif type(iterable) is list:
        for item in iterable:
            item = _convert_keys(item, conv_fn)
    return iterable


def snake_case_keys(iterable):
    return _convert_keys(iterable, camel_to_snake)


def camel_case_keys(iterable):
    return _convert_keys(iterable, snake_to_camel)
